{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww15680\viewh21100\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Files\
MANIPULATION DE FICHIER\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97-\
Man de Open\
int open(char *path, int flags[,mode_t perm]);\
\
path = fichier\
flags = mode d\'92ouverture\
perm = permissions\
\
Valeur de retour\
\
File descriptor (int) ou -1 en cas d\'92erreur.\
\
Flags \
O_RDONLY (lecture seule)\
O_WRONLY (\'e9criture seule)\
O_RDWR (les 2)\
\
O_CREAT (cr\'e9er le fichier si il n existe pas)\
O_TRUNC (Si le fichier existe, \'e9crit des le premier octet)\
O_APPEND (Si le fichier existe, \'e9crit depuis le dernier octet)\
\
Header inclut par OPEN.c\
\
#include <sys/types.h>\
#include <sys/stat.h>\
#include <fcntl.h>\
#include \'93j12.h\'94\
\
int	main()\
\{\
	int fd;\
\
	fd = open(\'93alph\'94, O_RDONLY);\
	ft_putnbr(fd)\
	return(0);\
\}\
\
Cree un fichier en \'e9criture:\
\
int	main()\
\{\
	int fd;\
\
	fd = open(\'9342\'94, O_WRONLY | O_CREAT, S_IRUSR | S_IWUSR);\
	ft_putnbr(fd)\
	return(0);\
\}\
\
OPEN RENVOIE -1 A L ERRUEUR\
\
if (fd == -1)\
	\{\
		ft_putstr(\'93open) failed\\n\'94);\
	\}\
	ft_putnbr(fd);\
	return(0);\
\}\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
man de close\
\
int  close(int fd); //fd = file descriptor a fermer\
\

man de Write\
\
int write(int fd, char *buf, int count);\
fd - File descriptor sue lequel \'e9crire\
but = buffer source\
count = Nombre d cotet a \'e9crire\
\
retour -1 ou le nombre d octet exit en cas d erreur\

Man de Read\
\
int read(int fd,, char *buf, int count);\
fd = File descriptor depuis lequel lire\
but = buffer de destination\
count = Nombre d\'92octet a lire\
\
Return -1 ou le nombre d\'92octet lus en cas d\'92erreur

Man de Iseek\
\
int Iseek(int fd, int offset, int mode);\
fd  = File descriptor\
offset = offset de r\'e9sultat ou de calcul\
mode = mode de calcul du nouvel offset\
Return -1 ou Nouvel offset en cas d\'92erreur}